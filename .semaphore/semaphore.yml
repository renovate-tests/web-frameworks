version: v1.0
name: Hello Docker

agent:
  machine:
    type: e1-standard-2

  containers:
    - name: main
      image: crystallang/crystal
      env_vars:
        - name: DATABASE_URL
          value: postgresql://postgres@db/benchmark

    - name: db
      image: postgres
      env_vars:
        - name: POSTGRES_PASSWORD
          value: keyboard-cat

blocks:
  - name: "Setup"
    task:
      jobs:
        - name: Database
          commands:
            - apt-get -y update && apt-get -y install postgresql-client
            - PGPASSWORD="keyboard-cat" createdb -U postgres -h db -p 5432 benchmark
            - checkout
            - PGPASSWORD="keyboard-cat" psql -U postgres -h db -d benchmark < .ci/dump.sql
  - name: "Test"
    task:
      prologue:
        commands:
          - apt-get -y update
          - apt-get -y install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
          - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          - apt-get -y update
          - apt-get -y install docker-ce docker-ce-cli containerd.io
          - checkout
          - shards install
          - shards build
          - bin/make config --without-sieger
      jobs:        
        - name: c.agoo-c
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: c.agoo-c
        - name: c.kore
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: c.kore
        - name: clojure.coast
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: clojure.coast
        - name: cpp.drogon
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: cpp.drogon
        - name: cpp.evhtp
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: cpp.evhtp
        - name: crystal.amber
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.amber
        - name: crystal.athena
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.athena
        - name: crystal.kemal
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.kemal
        - name: crystal.lucky
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.lucky
        - name: crystal.onyx
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.onyx
        - name: crystal.orion
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.orion
        - name: crystal.router.cr
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.router.cr
        - name: crystal.spider-gazelle
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.spider-gazelle
        - name: crystal.toro
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.toro
        - name: crystal.grip
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.grip
        - name: crystal.shivneri
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.shivneri
        - name: crystal.ricr
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: crystal.ricr
        - name: csharp.aspnetcore
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: csharp.aspnetcore
        - name: elixir.phoenix
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: elixir.phoenix
        - name: elixir.plug
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: elixir.plug
        - name: elixir.cowboy
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: elixir.cowboy
        - name: elixir.cowboy_stream
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: elixir.cowboy_stream
        - name: fsharp.suave
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: fsharp.suave
        - name: go.air
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.air
        - name: go.atreugo
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.atreugo
        - name: go.beego
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.beego
        - name: go.chi
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.chi
        - name: go.echo
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.echo
        - name: go.fasthttp
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.fasthttp
        - name: go.fasthttprouter
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.fasthttprouter
        - name: go.gf
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.gf
        - name: go.gin
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.gin
        - name: go.gorilla-mux
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.gorilla-mux
        - name: go.goroute
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.goroute
        - name: go.gorouter-fasthttp
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.gorouter-fasthttp
        - name: go.gorouter
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.gorouter
        - name: go.gramework
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.gramework
        - name: go.kami
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.kami
        - name: go.rte
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.rte
        - name: go.violetear
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.violetear
        - name: go.webgo
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.webgo
        - name: go.mars
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.mars
        - name: go.router
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.router
        - name: go.fiber
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.fiber
        - name: go.tango
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.tango
        - name: go.aero
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.aero
        - name: go.httprouter
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: go.httprouter
        - name: java.act
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: java.act
        - name: java.javalin
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: java.javalin
        - name: java.micronaut
          commands:
            - bin/neph ${FRAMEWORK} --mode=CI
          env_vars:
            - name: FRAMEWORK
              value: java.micronaut
      epilogue:
        commands:
            - crystal spec

